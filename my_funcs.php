<?php
function jsum ($num) {

	$len = strlen($num); //длинна числа
	for ($x = 0; $x <= $len; $x++){
    	$current_num = $num[$x]; //цифра, соответствующая циклу прогона
    	$res = $res + $current_num;
    	if ($x == $len) { 
       	 print "$res"; //определение конца числа
        }    
	}
}

###############################################################################################################################################

function jcaps ($str) {
  mb_internal_encoding("UTF-8");
    $stroka = (string)"$str";
    $count = '0'; //помогает найти пробел после конца предложения 
    $sentances = array(array()); //массив, содержащий предложения (что бы каждое первое слово массива начать с большой буквы)
    $key = 0; //переменная для разбиения предложений на массивы и их идентификации (увеличивается после нахождения конца предложения)
    $arr_stroka =  str_split($stroka); //массив с каждым символом текста в отдельной ячейке


    foreach ($arr_stroka as $stroka_elem) { //перебирает каждую букву предложения

      if ($stroka_elem == " " and $count == '0') { //ищет пробелы, стоящие в начале предложения 
        $stroka_elem = ''; //удаляет пробел в начале предложения
      }

      if ($stroka_elem != '.' and $stroka_elem != '?' and $stroka_elem != '!') { //точка, ?, ! - триггеры для перехода на следующий массив (предложение)
        $sentances[$key][0] = $sentances[$key][0] . $stroka_elem; //добавляет букву в активный сейчас массив
        $count++;
      } else {
        $sentances[$key][0] = $sentances[$key][0] . $stroka_elem; //добавляет точку в тот- же массив, что и прошлые буквы...
        $key++; // ...и переключает на следующий массив- предложение
        $count = '0'; //count = 0, значит самое начало нового предложения

      }

    }

    function mb_ucfirst($text) {
      return mb_strtoupper(mb_substr($text, 0, 1)) . mb_substr($text, 1);
}

    $text = '';
    foreach ($sentances as $sentance) {
      $imploded_sentance = implode("", $sentance); //соединяет массивы- предложения в строки
      $imploded_sentance = mb_ucfirst(mb_strtolower($imploded_sentance)); //конвертирует ВЕРХНИЙ РЕГИСТР в нижний, а потом ставит заглавные буквы
      $text = $text. " " . $imploded_sentance; //соединяет полученные слова в текст
    }
    $length = strlen($text);
    echo substr($text, 1, $length);
    
}
###############################################################################################################################################

  function occasional_lang_eng($str) {
    $eng = array('q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '[', ']', 'a' ,'s' ,'d' ,'f' ,'g' ,'h' ,'j' ,'k' ,'l', ';', "'", 'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '/', 'Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P', '{', '}', 'A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L', ':', '"', 'Z', 'X', 'C', 'V', 'B', 'N', 'M', '<', '>', '?','`', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '= ', '!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '_', '+' );
    $rus = array('й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х', 'ъ', 'ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', '.', 'Й', 'Ц', 'У', 'К', 'Е', 'Н', 'Г', 'Ш', 'Щ', 'З', 'Х', 'Ъ', 'Ф', 'Ы', 'В', 'А', 'П', 'Р', 'О', 'Л', 'Д', 'Ж', 'Э', 'Я', 'Ч', 'С', 'М', 'И', 'Т', 'Ь', 'Б', 'Ю', ',', '`', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '= ', '!', '"', '№', ';', '%', ':', '?', '*', '(', ')', '_', '+');
    return str_replace($eng, $rus, $str);
  }

###############################################################################################################################################

function occasional_lang_rus($str) {
    $rus = array('й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х', 'ъ', 'ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', '.', 'Й', 'Ц', 'У', 'К', 'Е', 'Н', 'Г', 'Ш', 'Щ', 'З', 'Х', 'Ъ', 'Ф', 'Ы', 'В', 'А', 'П', 'Р', 'О', 'Л', 'Д', 'Ж', 'Э', 'Я', 'Ч', 'С', 'М', 'И', 'Т', 'Ь', 'Б', 'Ю', ',', '`', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '= ', '!', '"', '№', ';', '%', ':', '?', '*', '(', ')', '_', '+');
    $eng = array('q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '[', ']', 'a' ,'s' ,'d' ,'f' ,'g' ,'h' ,'j' ,'k' ,'l', ';', "\'", 'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '/', 'Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P', '{', '}', 'A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L', ':', '"', 'Z', 'X', 'C', 'V', 'B', 'N', 'M', '<', '>', '?','`', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '= ', '!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '_', '+' );
    return str_replace($rus, $eng, $str);
  }


echo occasional_lang_rus("бю.");
?>
